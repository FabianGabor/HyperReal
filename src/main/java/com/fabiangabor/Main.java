/*
 * Fábián Gábor
 * Copyright (c) 2022.
 * https://github.com/FabianGabor
 */

package com.fabiangabor;

import com.fabiangabor.hyperreal.HyperInteger;
import com.fabiangabor.hyperreal.HyperReal;

public class Main {
    public static void main(String[] args) {

        HyperReal number1;
        HyperReal number2;

        number1 = new HyperInteger("-98765432109876543210");
        number2 = new HyperInteger("-12345678901234567890");

        System.out.println(number1 + " + " + number2 + " = " + number1.add(number2));
        System.out.println(number1 + " - " + number2 + " = " + number1.subtract(number2));
        System.out.println(number1 + " * " + number2 + " = " + number1.multiply(number2));
        System.out.println(number1 + " / " + number2 + " = " + number1.divide(number2));


        number1 = new HyperInteger("531137992816767098689588206552468627329593117727031923199444138200403559860852242739162502265229285668889329486246501015346579337652707239409519978766587351943831270835393219031728127");
        number2 = new HyperInteger(
                "6864797660130609714981900799081393217269435300143305409394463459185543183397656052122559640661454554977296311391480858037121987999716643812574028291115057151");

        System.out.println(number1.multiply(number2));

        HyperReal prime1 = new HyperInteger("488206692078974757239578751106501798481193064305790060593268437941627128786518531687782038367395832494215303395275266261062870163042743713567477092591560354372022298711585313960166069663510866751747594454428370134263085036017021235153166806087444438422225508307090473714775930968942163305842969968960054562144882959808916790127856236878924126832766246591681391552185769201675241103805718565160271127279144286915245849425395672583677793953258530912351358504190352840627804277371662423874093878957332436516983050363505381795724757049138580227182965779234414020354586369950286426688735805438813033123751256021943190348046084856883806613660223368049593031293490849051397554356373996859058494329846897");
        HyperReal prime2 = new HyperInteger("55558610769601845084032117764963690338979187239694411954612197817642698758345854432054120170830714766464188007124699226386623422387769456601176448956639325334537116275182973025840249128269412580280436561380140570587351647498514970765269750764472034037444958854210834276380918003970357231651598262223096012857397343437198448323531581388309338876444647380924682260339504523027125448155104599046828313551545739370286071676941209229143837472675844264230173707541208165228259972996459002751062573298411402344252697111948207941349668125541583535558456937012199450299952011671765759602629849268239727951048247103741366554054627352274368579415801299207137433624252756056310758472298250621");

        HyperReal primeFactor = prime1.multiply(prime2);

        System.out.println(primeFactor);
    }
}